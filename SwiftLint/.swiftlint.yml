disabled_rules:
  - explicit_acl # Feels unneeded specially, everything is Internal by default.
  - explicit_enum_raw_value
  - explicit_top_level_acl # Feels unneeded specially, everything is Internal by default.
  - explicit_type_interface # Could be useful in some cases but it's not always required. 
  - file_types_order # Doesn't work with view_previews
  - indentation_width
  - nesting
  - no_grouping_extension # Want to use extensions to separate functionality
  - no_extension_access_modifier # Making private extensions
  - multiline_arguments_brackets
  - nslocalizedstring_key
  - nslocalizedstring_require_bundle
  - required_deinit # Could be handy for testing, but not required.
  - superfluous_disable_command # Doesn't recognize custom rules
  - type_name # Want to use file names with k
  - vertical_parameter_alignment_on_call # Broken in 0.40. Enable when fixed.

opt_in_rules:
  - anyobject_protocol
  - array_init
  - attributes
  - block_based_kvo
  - class_delegate_protocol
  - closing_brace
  - closure_body_length
  - closure_end_indentation
  - closure_parameter_position
  - closure_spacing
  - collection_alignment
  - colon
  - comma
  - compiler_protocol_init
  - computed_accessors_order
  - conditional_returns_on_newline
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - control_statement
  - convenience_type
  - custom_rules
  - cyclomatic_complexity
  - deployment_target
  - discarded_notification_center_observer
  - discouraged_direct_init
  - discouraged_object_literal
  - discouraged_optional_boolean
  - discouraged_optional_collection
  - duplicate_enum_cases
  - duplicate_imports
  - dynamic_inline
  - empty_collection_literal
  - empty_count
  - empty_enum_arguments
  - empty_parameters
  - empty_parentheses_with_trailing_closure
  - empty_string
  - empty_xctest_method
  - enum_case_associated_values_count
  - expiring_todo
  - explicit_init
  - explicit_self
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - file_length
  - file_name_no_space
  - file_name
  - first_where
  - flatmap_over_map_reduce
  - for_where
  - force_cast
  - force_try
  - force_unwrapping
  - function_body_length
  - function_default_parameter_at_end
  - function_parameter_count
  - generic_type_name
  - ibinspectable_in_extension
  - identical_operands
  - identifier_name
  - implicit_getter
  - implicit_return
  - implicitly_unwrapped_optional
  - inert_defer
  - is_disjoint
  - joined_default_parameter
  - large_tuple
  - last_where
  - leading_whitespace
  - legacy_cggeometry_functions
  - legacy_constant
  - legacy_constructor
  - legacy_hashing
  - legacy_multiple
  - legacy_nsgeometry_functions
  - legacy_random
  - let_var_whitespace
  - line_length
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - mark
  - missing_docs
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters_brackets
  - multiline_parameters
  - multiple_closures_with_trailing_closure
  - nsobject_prefer_isequal
  - nimble_operator
  - no_fallthrough_only
  - no_space_in_method_call
  - notification_center_detachment
  - number_separator
  - object_literal
  - opening_brace
  - operator_whitespace
  - operator_usage_whitespace
  - optional_enum_case_matching
  - orphaned_doc_comment
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - prefer_zero_over_explicit_init
  - prefixed_toplevel_constant
  - private_action
  - private_outlet
  - private_over_fileprivate
  - private_unit_test
  - prohibited_interface_builder
  - prohibited_super_call
  - protocol_property_accessors_order
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - raw_value_for_camel_cased_codable_enum
  - reduce_boolean
  - reduce_into
  - redundant_discardable_let
  - redundant_nil_coalescing
  - redundant_objc_attribute
  - redundant_optional_initialization
  - redundant_set_access_control
  - redundant_string_enum_value
  - redundant_type_annotation
  - redundant_void_return  
  - required_enum_case
  - return_arrow_whitespace
  - shorthand_operator
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - statement_position
  - static_operator
  - strict_fileprivate
  - strong_iboutlet
  - switch_case_alignment
  - switch_case_on_newline
  - syntactic_sugar
  - todo
  - toggle_bool
  - trailing_closure
  - trailing_comma
  - trailing_newline
  - trailing_semicolon
  - trailing_whitespace
  - type_body_length
  - type_contents_order
  - unavailable_function
  - unneeded_break_in_switch
  - unneeded_notification_center_removal
  - unneeded_parentheses_in_closure_argument
  - unowned_variable_capture
  - untyped_error_in_catch
  - unused_capture_list
  - unused_closure_parameter
  - unused_control_flow_label
  - unused_declaration
  - unused_enumerated
  - unused_import
  - unused_optional_binding
  - unused_setter_value
  - valid_ibinspectable
  - vertical_parameter_alignment
  - vertical_whitespace_between_cases
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - vertical_whitespace
  - void_return
  - weak_delegate
  - xctfail_message
  - xct_specific_matcher
  - yoda_condition

cyclomatic_complexity:
  ignores_case_statements: true
  
file_header:
  required_pattern: |
                    \/\/
                    \/\/ Created by Kiran Thorat.
                    \/\/ Copyright © \d{4} Kiran Thorat\. All rights reserved\.
                    \/\/
file_name:
  suffix_pattern: "Extensions?|\\+.*"

identifier_name:
  excluded:
    - id

custom_rules:
  rule_dnc:
    name: Do Not Commit
    message: Do not commit test code
    regex: (DNC|TEST)
    severity: warning
  fatal_error:
    name: Fatal Error
    message: Prefer using `queuedFatalError` over `fatalError` to avoid leaking compiler host machine paths.
    regex: \bfatalError\b
    severity: error
  auto_generated_leftovers:
    regex: 'func [^\n]*\{\n(\s*super\.[^\n]*\n(\s*\/\/[^\n]*\n)*|(\s*\/\/[^\n]*\n)+)\s*\}'
    message: "Delete auto-generated functions that you don't use"

  numbers_smell:
    regex: '(return |case |\w\(|: |\?\? |\, |== |<=? |>=? |\+= |\-= |\/= |\*= |%= |\w\.\w+ = )\(*\d{2,}'
    message: "Numbers smell; define a constant instead."

  non_localized_word:
    regex: '(?<!NSLocalizedString\()"[[:upper:]][[:lower:]]+"'
    message: "Wrap string in NSLocalizedString()"

  non_localized_sentence:
    regex: '(?<!NSLocalizedString\(|fatalError\(|\S)"[^"]+ [^"]*"'
    message: "Wrap string in NSLocalizedString()"

  non_localized_multiline:
    regex: '(?<!NSLocalizedString\()""".*?"""'
    message: "Wrap string in NSLocalizedString()"

  already_true:
    regex: "== true"
    message: "Don't compare to true, just use the bool value."

  already_bool:
    regex: "== false"
    message: "Don't compare to false, just use !value."

  # commented_code:
  #   regex: '(?<!:|\/)\/\/\h*[a-z.](?!wiftlint)'
  #   message: "Comment starting with lowercase letter - did you forget to delete old code?"

  multiline_commented_code:
    regex: '^\s*[a-z]'
    match_kinds: comment
    message: "Comment starting with lowercase letter - did you forget to delete old code?"

  fatal_error:
    name: Fatal Error
    excluded: "Tests/*"
    message: Prefer using `queuedFatalError` over `fatalError` to avoid leaking compiler host machine paths.
    regex: \bfatalError\b
    match_kinds:
      - identifier
    severity: error

  comments_space: 
    name: "Space After Comment"
    regex: '(^ *//\w+)'
    message: "There should be a space after //"
    severity: warning

  explicit_failure_calls:
    name: “Avoid asserting ‘false’”
    regex: ‘((assert|precondition)\(false)’
    message: “Use assertionFailure() or preconditionFailure() instead.”
    severity: warning

  multiple_empty_lines:
   name: "Multiple Empty Lines"
   regex: '((?:\s*\n){3,})'
   message: "There are too many line breaks"
   severity: error

  comments_capitalized_find_possible_code:
    name: "Catch Commented Out Code"
    regex: "(^ *// +(?!swiftlint)[a-z]+)"
    message: "The first word of a comment should be capitalized"
    severity: warning

  protocol_conformance:
    name: "Protocol Conformance"
    message: "Protocol conformance should be declared in separate extensions in the same file"
    regex: "(class|struct|extension)[[:space:]]+(?i:(?![^d]*delegate:))[^'\"()<>{},!?:]+:([^'\"<>(){},!?:]+,)+[^'\"<>(){},!?:]*\\{"
    match_kinds:
      - keyword
    severity: warning

  computed_property:
    name: "Computed Properties"
    message: "The get clause should be omitted if the computed property is read only"
    regex: "var[[:space:]]+[^:]+:[^{]*\\{[[:space:]]*get[[:space:]]*\\{[^}]+\\}(?![[:space:]]*set)"
    match_kinds:
      - keyword
    severity: warning

excluded:
    - TidingsTests
    - TidingsUITests